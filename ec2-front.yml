---
  - name: Provision FrontEnd
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    
    # Necessary Variables for creating/provisioning the EC2 Instance 
    vars:
      instance_type: t2.micro
      security_group: sg_front
      image: ami-7c412f13
      keypair: KEY-FC-VBOX                              #already exists
      region: eu-central-1
      count: 1
      id: "FC_FRONT_0002"

    # Task that will be used to Launch/Create an EC2 Instance 
    tasks:
      - name: Create security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for Front Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall


      - name: Launch front servers
        ec2: 
          group: "{{ security_group }}" 
          instance_type: "{{ instance_type}}" 
          image: "{{ image }}" 
          wait: true 
          region: "{{ region }}" 
          key_name: "{{ keypair }}"
          count: "{{count}}"
#          id: "{{id}}"
          user_data: "{{ lookup('file', 'user_data.sh') }}"
          instance_tags:
             tool: "ansible"
             env: "test"
        register: ec2
         

      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: '{{ ec2.instances }}'

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: '{{ec2.instances}}'
        args:
          tags:
            name: webserver
